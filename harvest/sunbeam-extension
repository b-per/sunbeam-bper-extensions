#! /bin/bash

source ~/.sunbeamrc

if [ $# -eq 0 ]; then
    jq -n '
{
    title: "Harvest",
    commands: [
        { name: "list-projects", mode: "filter", title: "List Projects" },
        { name: "detail-project", mode: "filter", title: "Detail Project", hidden: true, params: [{ title:"Project ID", name: "project_id", type: "string", required: true }]}
    ]
}'
exit 0
fi

COMMAND=$(echo "$1" | jq -r '.command')
if [[ $COMMAND == "list-projects" ]]; then
    timesheets=$(curl -s --request GET \
    --url "https://api.harvestapp.com/api/v2/time_entries?user_id=${SB_HARVEST_USERID}&from=2022-01-01" \
    --header "authorization: Bearer ${SB_HARVEST_TOKEN}" \
    --header "harvest-account-id: ${SB_HARVEST_ACCOUNT}" | jq '[.time_entries[] | select(.billable == true)] | group_by(.project.id)  | map({project_id: first.project.id | tostring, hours: (map(.hours) | add)})')

    projects=$(curl -s --request GET \
    --url https://api.harvestapp.com/api/v2/reports/project_budget?is_active=true \
    --header "authorization: Bearer ${SB_HARVEST_TOKEN}" \
    --header "harvest-account-id: ${SB_HARVEST_ACCOUNT}" | jq '[.results[] | {project_id: .project_id | tostring, name: .project_name, budget: .budget, budget_spent: .budget_spent, client: .client_name}]')

    results=$(jq -n --argjson projects "$projects" --argjson timesheets "$timesheets" '[JOIN(INDEX($projects[]; .project_id); $timesheets[]; .project_id; add) | select(.client) | . += {url: ("'$SB_HARVEST_URL'/projects/" + .project_id)}]')

    echo $results | jq '[ .[] |
    {
        title: (.client + " - " + .name),
        subtitle: ("(" + (.hours | tostring) + ") " + (.budget_spent | tostring) + " / " + (.budget | tostring)),
        actions: [
            {
                title: "Open Harvest",
                type: "open",
                url: .url
            },
            {
                title: "Add Time",
                key: "a",
                type: "open",
                url: "'$SB_HARVEST_URL'/time/week"
            },
            {
                title: "Copy Hours",
                key: "l",
                type: "copy",
                text: .hours | tostring
            },
            {
                title: "Details",
                key: "d",
                type: "run",
                command: "detail-project",
                params: {project_id: .project_id}
            }
        ]
    }
    ] | { "items" : . }'
    exit 0
fi


if [[ $COMMAND == "detail-project" ]]; then

    PROJECT_ID=$(echo "$1" | jq -r '.params.project_id')

    details=$(curl -s --request GET \
    --url "https://api.harvestapp.com/api/v2/time_entries?project_id=${PROJECT_ID}" \
    --header "authorization: Bearer ${SB_HARVEST_TOKEN}" \
    --header "harvest-account-id: ${SB_HARVEST_ACCOUNT}")

    parsed_details=$(echo $details | jq '[ .time_entries[] | {task_name: .task.name, user_name: .user.name, billable: .billable, hours: .hours} ]
        | group_by(.task_name)
        | map({
            task_name: .[0].task_name,
            entries: group_by(.billable)
            | map({
                task_name: .[0].task_name,
                billable_status: (.[0].billable | if . then "Billable" else "Non Billable" end),
                user_name: .[0].user_name,
                total_hours: map(.hours) | add
            })
        }) as $groupedTasks
        | [
            $groupedTasks[].entries[]
        ] as $flatTasks
        | $flatTasks
        | group_by(.billable_status)
        | map({
            task_name: "TOTAL",
            billable_status: .[0].billable_status,
            user_name: "ALL",
            total_hours: map(.total_hours) | add
        }) as $totals
        | $flatTasks + $totals
        | map({task: [.task_name, .user_name, .billable_status ]| join(" - ") , total_hours})')

    echo $parsed_details | jq '[ .[] |
    {
        title: .task,
        subtitle: .total_hours | tostring,
    }
    ] | { "items" : . }'
    exit 0
fi
