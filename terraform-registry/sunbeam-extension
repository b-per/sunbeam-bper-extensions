#!/usr/bin/env bash

set -eo pipefail

COMMAND=$(echo "$1" | jq -r '.command')
PROVIDERS='["dbt-labs/dbtcloud", "GtheSheep/dbt-cloud", "fivetran/fivetran", "Snowflake-Labs/snowflake", "databricks/databricks", "integrations/github"]'

if [ $# -eq 0 ]; then
jq -n '{
    title: "TF",
    commands: [
        {name: "list-providers", mode: "filter", title: "List Providers"},
        {name: "list-releases", mode: "filter", title: "List Releases", params: [{title: "Provider", name: "provider", type: "string", required: true}]},
        {name: "show-details", mode: "filter", title: "Show Details", params: [{title: "ID", name: "id", type: "string", required: true}, {title: "Version", name: "version", type: "string", required: true}]}
    ]
}'
exit 0
fi


if [[ $COMMAND == "list-providers" ]]; then

    echo $PROVIDERS | jq '
        {
        items: map({
            title: .,
            actions: [{
                title: "List releases",
                type: "run",
                command: "list-releases",
                params: { provider: . }
            }]
        })
        }'
     exit 0

elif [[ $COMMAND == "list-releases" ]]; then

    PROVIDER=$(echo "$1" | jq -r '.params.provider')
    versions=$(curl "https://registry.terraform.io/v2/providers/${PROVIDER}?include=categories,moved-to,potential-fork-of,provider-versions,top-modules&include=categories%2Cmoved-to%2Cpotential-fork-of%2Cprovider-versions%2Ctop-modules")

    ID=$(echo $versions | jq -r '.data.id')

    echo $versions |  jq --arg provider "${PROVIDER}"  --arg id ${ID} '
        {
        items:
            (.included | sort_by(.attributes["published-at"]) | reverse | map({
            title: (.attributes.version // "ALL"),
            subtitle: (.attributes["published-at"][:10] // "N/A"),
            accessories: [(.attributes.downloads | tostring)],
            actions: [
                {
                    title: "Download details",
                    type: "run",
                    command: "show-details",
                    params: { id: $id, version: (.attributes.version // "") }
                },
                {
                    title: "Open in Browser",
                    key: "o",
                    type: "open",
                    url: ("https://registry.terraform.io/providers/" + $provider + "/" + (.attributes.version // ""))
                }
            ]
            }))
        }'
     exit 0


elif [[ $COMMAND == "show-details" ]]; then

    PARAMS=$(echo "$1" | jq '.params')
    ID=$(echo $PARAMS | jq -r '.id')
    VERSION=$(echo $PARAMS | jq -r '.version')

    details=$(curl "https://registry.terraform.io/v2/providers/${ID}/downloads/summary?filter%5Bversion%5D=${VERSION}")

    echo $details | jq '
        {
            items: [
                {
                    title: "This week",
                    subtitle: (.data.attributes.week | tostring)
                },
                {
                    title: "This month",
                    subtitle: (.data.attributes.month | tostring)
                },
                {
                    title: "This year",
                    subtitle: (.data.attributes.year | tostring)
                },
                {
                    title: "Total",
                    subtitle: (.data.attributes.total | tostring)
                }
            ]
        }'

fi
